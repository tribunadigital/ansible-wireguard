---
- name: 'Set var privatekey is empty'
  ansible.builtin.set_fact:
    privatekey: {}

- name: "Read private key {{ item }}"
  ansible.builtin.stat:
    path: "{{ wireguard_conf_dir }}/privatekey_{{ item }}"
  register: privatekey

- name: "Generate wireguard keys {{ item }}"
  ansible.builtin.shell: |
    {{ 'export PATH="' + wireguard_macos_shell_env_path + '"' if ansible_os_family == 'Darwin' }}
    umask 077
    wg genkey | tee {{ wireguard_conf_dir }}/privatekey_{{ item }} | wg pubkey > {{ wireguard_conf_dir }}/publickey_{{ item }}
  args:
    executable: /bin/bash
  when: not privatekey.stat.exists

- name: "Read private key {{ item }}"
  ansible.builtin.slurp:
    src: "{{ wireguard_conf_dir }}/privatekey_{{ item }}"
  register: privatedata

- name: "Read public key {{ item }}"
  ansible.builtin.slurp:
    src: "{{ wireguard_conf_dir }}/publickey_{{ item }}"
  register: publicdata

- name: 'Set var private and public'
  ansible.builtin.set_fact:
    private: >
      {%  set _private = private | default({}) -%}
      {%- set x=_private.__setitem__(item, privatedata) -%}
      {{- _private }}
    public: >
      {%  set _public = public | default({}) -%}
      {%- set x=_public.__setitem__(item, publicdata) -%}
      {{- _public }}

